package com.crosspay.payment.model;

import java.io.UnsupportedEncodingException;
import java.security.InvalidAlgorithmParameterException;
import java.security.InvalidKeyException;
import java.security.NoSuchAlgorithmException;
import java.security.spec.InvalidKeySpecException;
import java.sql.Blob;
import java.util.Date;

import javax.crypto.BadPaddingException;
import javax.crypto.IllegalBlockSizeException;
import javax.crypto.NoSuchPaddingException;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.Table;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Null;

import org.json.JSONException;
import org.json.JSONObject;

@Entity
@Table(name = "CUSTOMER")
public class Customer {

	// An autogenerated id (unique for each user in the db)
	@Id
	@GeneratedValue(strategy = GenerationType.AUTO)
	private int CUSTOMER_ID;
	
	@NotNull
	private String CUSTOMERNO;

	@NotNull
	private String CUSTOMERFIRSTNAME;
	
	@Null
	private String CUSTOMERMIDDLENAME;

	@NotNull
	private String CUSTOMERLASTNAME;

	@NotNull
	private String CUSTOMEREMAIL;

	@NotNull
	private String CUSTOMERMOBILE;

	@NotNull
	private String CUSTOMERADDRESSCOUNTRYCODE;

	@NotNull
	private String CUSTOMERDATEOFBIRTH;

	@NotNull
	private String CUSTOMERGENDER;

	@NotNull
	private String CUSTOMERCATEGORY;

	@Null
	private String CUSTOMERPOBOX;

	@Null
	private String CUSTOMERADDRESS1;

	@Null
	private String CUSTOMERADDRESS2;

	@Null
	private String CUSTOMERADDRESSCITY;

	@Null
	private String CUSTOMERADDRESSSTATE;

	@Null
	private String CUSTOMERADDRESSZIP;

	@Null
	private String CUSTOMERPHONE;

	@Null
	private String CUSTOMERADDRESSCOUNTRY;

	@Null
	private String NOTIFYCUSTOMERBYEMAIL;

	@Null
	private String NOTIFYCUSTOMERBYSMS;

	@Null
	private String CUSTOMERNATIONALITYCODE;

	@NotNull
	private Date CREATEDON;

	@NotNull
	private int USERCATEGORIES_ID;
	
	@Null
	private Blob CUSTOMERIMAGE;
	
	@Null
	private String ID_PROOF_TYPE;

	@Null
	private String ISSUED_BY;
	
	@Null
	private Date ISSUED_DATE;
	
	@Null
	private Date EXPIRY_DATE;
	// Public methods
	// Getter and setter methods

	public int getCUSTOMER_ID() {
		return CUSTOMER_ID;
	}

	public void setCUSTOMER_ID(int cUSTOMER_ID) {
		CUSTOMER_ID = cUSTOMER_ID;
	}

	public String getCUSTOMERFIRSTNAME() {
		return CUSTOMERFIRSTNAME;
	}

	public void setCUSTOMERFIRSTNAME(String cUSTOMERFIRSTNAME) {
		CUSTOMERFIRSTNAME = cUSTOMERFIRSTNAME;
	}

	public String getCUSTOMERMIDDLENAME() {
		return CUSTOMERMIDDLENAME;
	}

	public void setCUSTOMERMIDDLENAME(String cUSTOMERMIDDLENAME) {
		CUSTOMERMIDDLENAME = cUSTOMERMIDDLENAME;
	}

	public String getCUSTOMERLASTNAME() {
		return CUSTOMERLASTNAME;
	}

	public void setCUSTOMERLASTNAME(String cUSTOMERLASTNAME) {
		CUSTOMERLASTNAME = cUSTOMERLASTNAME;
	}

	public String getCUSTOMEREMAIL() {
		return CUSTOMEREMAIL;
	}

	public void setCUSTOMEREMAIL(String cUSTOMEREMAIL) {
		CUSTOMEREMAIL = cUSTOMEREMAIL;
	}

	public String getCUSTOMERMOBILE() {
		return CUSTOMERMOBILE;
	}

	public void setCUSTOMERMOBILE(String cUSTOMERMOBILE) {
		CUSTOMERMOBILE = cUSTOMERMOBILE;
	}

	public String getCUSTOMERADDRESSCOUNTRYCODE() {
		return CUSTOMERADDRESSCOUNTRYCODE;
	}

	public void setCUSTOMERADDRESSCOUNTRYCODE(String cUSTOMERADDRESSCOUNTRYCODE) {
		CUSTOMERADDRESSCOUNTRYCODE = cUSTOMERADDRESSCOUNTRYCODE;
	}

	public String getCUSTOMERDATEOFBIRTH() {
		return CUSTOMERDATEOFBIRTH;
	}

	public void setCUSTOMERDATEOFBIRTH(String cUSTOMERDATEOFBIRTH) {
		CUSTOMERDATEOFBIRTH = cUSTOMERDATEOFBIRTH;
	}

	public String getCUSTOMERGENDER() {
		return CUSTOMERGENDER;
	}

	public void setCUSTOMERGENDER(String cUSTOMERGENDER) {
		CUSTOMERGENDER = cUSTOMERGENDER;
	}

	public String getCUSTOMERCATEGORY() {
		return CUSTOMERCATEGORY;
	}

	public void setCUSTOMERCATEGORY(String cUSTOMERCATEGORY) {
		CUSTOMERCATEGORY = cUSTOMERCATEGORY;
	}

	public String getCUSTOMERPOBOX() {
		return CUSTOMERPOBOX;
	}

	public void setCUSTOMERPOBOX(String cUSTOMERPOBOX) {
		CUSTOMERPOBOX = cUSTOMERPOBOX;
	}

	public String getCUSTOMERADDRESS1() {
		return CUSTOMERADDRESS1;
	}

	public void setCUSTOMERADDRESS1(String cUSTOMERADDRESS1) {
		CUSTOMERADDRESS1 = cUSTOMERADDRESS1;
	}

	public String getCUSTOMERADDRESS2() {
		return CUSTOMERADDRESS2;
	}

	public void setCUSTOMERADDRESS2(String cUSTOMERADDRESS2) {
		CUSTOMERADDRESS2 = cUSTOMERADDRESS2;
	}

	public String getCUSTOMERADDRESSCITY() {
		return CUSTOMERADDRESSCITY;
	}

	public void setCUSTOMERADDRESSCITY(String cUSTOMERADDRESSCITY) {
		CUSTOMERADDRESSCITY = cUSTOMERADDRESSCITY;
	}

	public String getCUSTOMERADDRESSSTATE() {
		return CUSTOMERADDRESSSTATE;
	}

	public void setCUSTOMERADDRESSSTATE(String cUSTOMERADDRESSSTATE) {
		CUSTOMERADDRESSSTATE = cUSTOMERADDRESSSTATE;
	}

	public String getCUSTOMERADDRESSZIP() {
		return CUSTOMERADDRESSZIP;
	}

	public void setCUSTOMERADDRESSZIP(String cUSTOMERADDRESSZIP) {
		CUSTOMERADDRESSZIP = cUSTOMERADDRESSZIP;
	}

	public String getCUSTOMERPHONE() {
		return CUSTOMERPHONE;
	}

	public void setCUSTOMERPHONE(String cUSTOMERPHONE) {
		CUSTOMERPHONE = cUSTOMERPHONE;
	}

	public String getCUSTOMERADDRESSCOUNTRY() {
		return CUSTOMERADDRESSCOUNTRY;
	}

	public void setCUSTOMERADDRESSCOUNTRY(String cUSTOMERADDRESSCOUNTRY) {
		CUSTOMERADDRESSCOUNTRY = cUSTOMERADDRESSCOUNTRY;
	}

	public String getNOTIFYCUSTOMERBYEMAIL() {
		return NOTIFYCUSTOMERBYEMAIL;
	}

	public void setNOTIFYCUSTOMERBYEMAIL(String nOTIFYCUSTOMERBYEMAIL) {
		NOTIFYCUSTOMERBYEMAIL = nOTIFYCUSTOMERBYEMAIL;
	}

	public String getNOTIFYCUSTOMERBYSMS() {
		return NOTIFYCUSTOMERBYSMS;
	}

	public void setNOTIFYCUSTOMERBYSMS(String nOTIFYCUSTOMERBYSMS) {
		NOTIFYCUSTOMERBYSMS = nOTIFYCUSTOMERBYSMS;
	}

	public String getCUSTOMERNATIONALITYCODE() {
		return CUSTOMERNATIONALITYCODE;
	}

	public void setCUSTOMERNATIONALITYCODE(String cUSTOMERNATIONALITYCODE) {
		CUSTOMERNATIONALITYCODE = cUSTOMERNATIONALITYCODE;
	}

	public Date getCREATEDON() {
		return CREATEDON;
	}

	public void setCREATEDON(Date cREATEDON) {
		CREATEDON = cREATEDON;
	}

	public int getUSERCATEGORIES_ID() {
		return USERCATEGORIES_ID;
	}

	public void setUSERCATEGORIES_ID(int uSERCATEGORIES_ID) {
		USERCATEGORIES_ID = uSERCATEGORIES_ID;
	}

	public String getCUSTOMERNO() {
		return CUSTOMERNO;
	}

	public void setCUSTOMERNO(String cUSTOMERNO) {
		CUSTOMERNO = cUSTOMERNO;
	}

	public Blob getCUSTOMERIMAGE() {
		return CUSTOMERIMAGE;
	}

	public void setCUSTOMERIMAGE(Blob cUSTOMERIMAGE) {
		CUSTOMERIMAGE = cUSTOMERIMAGE;
	}
	
	

	public String getID_PROOF_TYPE() {
		return ID_PROOF_TYPE;
	}

	public void setID_PROOF_TYPE(String iD_PROOF_TYPE) {
		ID_PROOF_TYPE = iD_PROOF_TYPE;
	}

	public String getISSUED_BY() {
		return ISSUED_BY;
	}

	public void setISSUED_BY(String iSSUED_BY) {
		ISSUED_BY = iSSUED_BY;
	}

	public Date getISSUED_DATE() {
		return ISSUED_DATE;
	}

	public void setISSUED_DATE(Date iSSUED_DATE) {
		ISSUED_DATE = iSSUED_DATE;
	}

	public Date getEXPIRY_DATE() {
		return EXPIRY_DATE;
	}

	public void setEXPIRY_DATE(Date eXPIRY_DATE) {
		EXPIRY_DATE = eXPIRY_DATE;
	}

	public Customer() {
	}

	public Customer(long id) {
		// this.id = id;
	}


	public JSONObject result(Customer reg) throws JSONException {
		JSONObject resultjson = new JSONObject();
		resultjson.put("status", "200");
		resultjson.put("message", "Success");
		return resultjson;
	}

}